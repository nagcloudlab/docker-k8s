

k8s configmaps and secrets
--------------------------------




kubectl create configmap app-config \
  --from-literal=PRODUCT_SERVICE_URL=http://product:5001/product/ \
  --from-literal=RECOMMENDATION_SERVICE_URL=http://recommendation:5002/recommendation/ \
  --from-literal=REVIEW_SERVICE_URL=http://review:5003/review/ \
  -n workshop


kubectl create configmap app-config \
  --from-file=app-config.yaml \
  -n workshop


kubectl create configmap app-config \
  --from-env-file=app-config.yaml \
  -n workshop


kubectl get configmaps -n workshop
kubectl describe configmap app-config -n workshop


Now create a secret for the database credentials and JWT secret key:

kubectl create secret generic db-credentials \
  --from-literal=POSTGRES_USER=postgres \
  --from-literal=POSTGRES_PASSWORD=securepassword \
  --from-literal=JWT_SECRET_KEY=supersecretkey \
  -n workshop


kubectl create secret tls tls-secret \
  --cert=./tls.crt \
  --key=./tls.key \
  -n workshop

kubectl get secrets -n workshop

kubectl describe secret db-credentials -n workshop


kubectl apply -f k8s/


kubectl exec -it <pod-name> -n workshop -- env


curl http://localhost:5000/product-composite/1



6. Best Practices

a. Avoid Hardcoding Sensitive Data

b. Use Separate ConfigMaps for Different Concerns
kubectl create configmap db-config --from-literal=DATABASE_URL=...
kubectl create configmap api-config --from-literal=API_KEY=...

c. Version Control Configuration Files
d. Restrict Access to Secrets

e. Rotate Secrets Regularly
